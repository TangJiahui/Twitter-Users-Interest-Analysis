tech_cat <- rep("technology",length(technology))
tech_data <-cbind(technology,tech_cat)
total <- rbind(art_data,bus_data,politics_data,food_data,sport_data,tech_data,music_data,fashion_data,news_data)
food_cat <- rep("food",length(food))
food_data <-cbind(food,edu_cat)
total <- rbind(art_data,bus_data,politics_data,food_data,sport_data,tech_data,music_data,fashion_data,news_data)
matrix <- create_matrix(total[,1], language="english", removeStopwords=T, removeNumbers=T,stemWords=T, toLower=T, removePunctuation=T, removeSparseTerms=0.998)
mat <- as.matrix(matrix)
View(mat)
svm_classifier = svm(mat,as.factor(total[,2]))
setwd("~/Dropbox/BT2101 Project")
library(twitteR)
library(ROAuth)
#window users need to get this file
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "dWn8y9ayJmoeCg9opQ9YXNaK7"
consumerSecret = "IyjpFlSoeBAgs7zUPgsB2w31GRGLpNG7KJX3kknuP4KmYGsn8n"
Cred <- OAuthFactory$new(consumerKey=consumerKey, consumerSecret=consumerSecret, requestURL=requestURL, accessURL=accessURL, authURL=authURL)
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl") )
save(Cred, file="twitter_auth.Rdata")
registerTwitterOAuth(Cred)
load("twitter_auth.Rdata")
registerTwitterOAuth(Cred)
# for a certain twitter user
user <- userTimeline('Food Network',n=100)
user <- twListToDF(user)
user <- user$text
times <- as.data.frame(rep.int(0,9))
percentage <- as.data.frame(rep.int(0,9))
classes <- c("arts","business","food","fashion","music","news","politics","sports","technology")
result_table <- cbind(classes, times,percentage)
num_tweets <- 0
for (i in 1:length(user)){
current <- user[i]
result <- predictTest(current, mat, svm_classifier)
print(result)
for (j in 1:9){
if (result_table[j,1]==result){
result_table[j,2]=result_table[j,2]+1
num_tweets = num_tweets+1
}
}
}
for (j in 1:9){
result_table[j,3] = result_table[j,2]/num_tweets
}
pie(as.vector(result_table[,3]), labels = as.vector(result_table[,1]))
user
user <- userTimeline('Food Network',n=100)
user <- userTimeline('FoodNetwork',n=100)
user <- twListToDF(user)
user <- user$text
times <- as.data.frame(rep.int(0,9))
percentage <- as.data.frame(rep.int(0,9))
classes <- c("arts","business","food","fashion","music","news","politics","sports","technology")
result_table <- cbind(classes, times,percentage)
num_tweets <- 0
for (i in 1:length(user)){
current <- user[i]
result <- predictTest(current, mat, svm_classifier)
print(result)
for (j in 1:9){
if (result_table[j,1]==result){
result_table[j,2]=result_table[j,2]+1
num_tweets = num_tweets+1
}
}
}
for (j in 1:9){
result_table[j,3] = result_table[j,2]/num_tweets
}
pie(as.vector(result_table[,3]), labels = as.vector(result_table[,1]))
predictTest("I love Bao Jingxian so much", mat, svm_classifier)
predictTest("I don't like business analytics", mat, svm_classifier)
predictTest("go to school", mat, svm_classifier)
predictTest("I prefer chanel than gucci", mat, svm_classifier)
predictTest("taylor swift's new album just came out", mat, svm_classifier)
predictTest("hongkong protest their right", mat, svm_classifier)
predictTest("football champion", mat, svm_classifier)
predictTest("eat chocolate brownie now", mat, svm_classifier)
# for a certain twitter user
user <- userTimeline('hsianghui',n=100)
user <- twListToDF(user)
user <- user$text
times <- as.data.frame(rep.int(0,9))
percentage <- as.data.frame(rep.int(0,9))
classes <- c("arts","business","food","fashion","music","news","politics","sports","technology")
result_table <- cbind(classes, times,percentage)
num_tweets <- 0
for (i in 1:length(user)){
current <- user[i]
result <- predictTest(current, mat, svm_classifier)
print(result)
for (j in 1:9){
if (result_table[j,1]==result){
result_table[j,2]=result_table[j,2]+1
num_tweets = num_tweets+1
}
}
}
for (j in 1:9){
result_table[j,3] = result_table[j,2]/num_tweets
}
pie(as.vector(result_table[,3]), labels = as.vector(result_table[,1]))
View(mat)
user <- userTimeline('AngelaTjh',n=100)
user <- twListToDF(user)
user <- user$text
times <- as.data.frame(rep.int(0,9))
percentage <- as.data.frame(rep.int(0,9))
classes <- c("arts","business","food","fashion","music","news","politics","sports","technology")
result_table <- cbind(classes, times,percentage)
num_tweets <- 0
for (i in 1:length(user)){
current <- user[i]
result <- predictTest(current, mat, svm_classifier)
print(result)
for (j in 1:9){
if (result_table[j,1]==result){
result_table[j,2]=result_table[j,2]+1
num_tweets = num_tweets+1
}
}
}
for (j in 1:9){
result_table[j,3] = result_table[j,2]/num_tweets
}
pie(as.vector(result_table[,3]), labels = as.vector(result_table[,1]))
View(result_table)
user <- userTimeline('i0n1c',n=100)
user <- twListToDF(user)
user <- user$text
times <- as.data.frame(rep.int(0,9))
percentage <- as.data.frame(rep.int(0,9))
classes <- c("arts","business","food","fashion","music","news","politics","sports","technology")
result_table <- cbind(classes, times,percentage)
num_tweets <- 0
for (i in 1:length(user)){
current <- user[i]
result <- predictTest(current, mat, svm_classifier)
print(result)
for (j in 1:9){
if (result_table[j,1]==result){
result_table[j,2]=result_table[j,2]+1
num_tweets = num_tweets+1
}
}
}
for (j in 1:9){
result_table[j,3] = result_table[j,2]/num_tweets
}
pie(as.vector(result_table[,3]), labels = as.vector(result_table[,1]))
save(svm_classifier, "hello.data")
help(save)
save(svm_classifier, file="hello.data")
save(svm_classifier, file="SvmClassifier.Rdata")
help(load)
help(read)
help(open)
help(save)
help(load)
svm2 = load("SvmClassifier.RData")
user <- userTimeline('i0n1c',n=100)
user <- twListToDF(user)
user <- user$text
times <- as.data.frame(rep.int(0,9))
percentage <- as.data.frame(rep.int(0,9))
classes <- c("arts","business","food","fashion","music","news","politics","sports","technology")
result_table <- cbind(classes, times,percentage)
num_tweets <- 0
for (i in 1:length(user)){
current <- user[i]
result <- predictTest(current, mat, svm2)
print(result)
for (j in 1:9){
if (result_table[j,1]==result){
result_table[j,2]=result_table[j,2]+1
num_tweets = num_tweets+1
}
}
}
for (j in 1:9){
result_table[j,3] = result_table[j,2]/num_tweets
}
pie(as.vector(result_table[,3]), labels = as.vector(result_table[,1]))
load("SvmClassifier.RData")
help(rm)
save.image("~/Desktop/Untitled.RData")
load("SvmClassifier.RData")
user <- userTimeline('i0n1c',n=100)
user <- twListToDF(user)
user <- user$text
times <- as.data.frame(rep.int(0,9))
percentage <- as.data.frame(rep.int(0,9))
classes <- c("arts","business","food","fashion","music","news","politics","sports","technology")
result_table <- cbind(classes, times,percentage)
num_tweets <- 0
for (i in 1:length(user)){
current <- user[i]
result <- predictTest(current, mat, svm2)
print(result)
for (j in 1:9){
if (result_table[j,1]==result){
result_table[j,2]=result_table[j,2]+1
num_tweets = num_tweets+1
}
}
}
for (j in 1:9){
result_table[j,3] = result_table[j,2]/num_tweets
}
pie(as.vector(result_table[,3]), labels = as.vector(result_table[,1]))
predictTest <- function(test_user, mat, classifier){
train_mat = mat[1:2,]
train_mat[,1:ncol(train_mat)] = 0
test_matrix = create_matrix(test_user, language="english", removeStopwords=T, removeNumbers=T,stemWords=T, toLower=T, removePunctuation=T)
test_mat <- as.matrix(test_matrix)
for(col in colnames(test_mat)){
if(col %in% colnames(train_mat))
{
train_mat[2,col] = test_mat[1,col];
}
}
#test_mat = as.matrix(t(test_mat))
row.names(train_mat)[1] = ""
row.names(train_mat)[2] = test_user
p <- predict(classifier, train_mat[1:2,])
as.character(p[2])
}
user <- userTimeline('i0n1c',n=100)
user <- twListToDF(user)
user <- user$text
times <- as.data.frame(rep.int(0,9))
percentage <- as.data.frame(rep.int(0,9))
classes <- c("arts","business","food","fashion","music","news","politics","sports","technology")
result_table <- cbind(classes, times,percentage)
num_tweets <- 0
for (i in 1:length(user)){
current <- user[i]
result <- predictTest(current, mat, svm2)
print(result)
for (j in 1:9){
if (result_table[j,1]==result){
result_table[j,2]=result_table[j,2]+1
num_tweets = num_tweets+1
}
}
}
for (j in 1:9){
result_table[j,3] = result_table[j,2]/num_tweets
}
pie(as.vector(result_table[,3]), labels = as.vector(result_table[,1]))
load("~/Desktop/Untitled.RData")
help(save)
save(svm_classifier, mat, file="classifier.Rdata")
predictTest <- function(test_user, mat, classifier){
train_mat = mat[1:2,]
train_mat[,1:ncol(train_mat)] = 0
test_matrix = create_matrix(test_user, language="english", removeStopwords=T, removeNumbers=T,stemWords=T, toLower=T, removePunctuation=T)
test_mat <- as.matrix(test_matrix)
for(col in colnames(test_mat)){
if(col %in% colnames(train_mat))
{
train_mat[2,col] = test_mat[1,col];
}
}
#test_mat = as.matrix(t(test_mat))
row.names(train_mat)[1] = ""
row.names(train_mat)[2] = test_user
p <- predict(classifier, train_mat[1:2,])
as.character(p[2])
}
load("classifier.Rdata")
user <- userTimeline('i0n1c',n=100)
user <- twListToDF(user)
user <- user$text
times <- as.data.frame(rep.int(0,9))
percentage <- as.data.frame(rep.int(0,9))
classes <- c("arts","business","food","fashion","music","news","politics","sports","technology")
result_table <- cbind(classes, times,percentage)
num_tweets <- 0
for (i in 1:length(user)){
current <- user[i]
result <- predictTest(current, mat, svm2)
print(result)
for (j in 1:9){
if (result_table[j,1]==result){
result_table[j,2]=result_table[j,2]+1
num_tweets = num_tweets+1
}
}
}
for (j in 1:9){
result_table[j,3] = result_table[j,2]/num_tweets
}
pie(as.vector(result_table[,3]), labels = as.vector(result_table[,1]))
predictTest <- function(test_user, mat, classifier){
train_mat = mat[1:2,]
train_mat[,1:ncol(train_mat)] = 0
test_matrix = create_matrix(test_user, language="english", removeStopwords=T, removeNumbers=T,stemWords=T, toLower=T, removePunctuation=T)
test_mat <- as.matrix(test_matrix)
for(col in colnames(test_mat)){
if(col %in% colnames(train_mat))
{
train_mat[2,col] = test_mat[1,col];
}
}
#test_mat = as.matrix(t(test_mat))
row.names(train_mat)[1] = ""
row.names(train_mat)[2] = test_user
p <- predict(classifier, train_mat[1:2,])
as.character(p[2])
}
load("classifier.Rdata")
user <- userTimeline('i0n1c',n=100)
user <- twListToDF(user)
user <- user$text
times <- as.data.frame(rep.int(0,9))
percentage <- as.data.frame(rep.int(0,9))
classes <- c("arts","business","food","fashion","music","news","politics","sports","technology")
result_table <- cbind(classes, times,percentage)
num_tweets <- 0
for (i in 1:length(user)){
current <- user[i]
result <- predictTest(current, mat, svm_classifier)
print(result)
for (j in 1:9){
if (result_table[j,1]==result){
result_table[j,2]=result_table[j,2]+1
num_tweets = num_tweets+1
}
}
}
for (j in 1:9){
result_table[j,3] = result_table[j,2]/num_tweets
}
pie(as.vector(result_table[,3]), labels = as.vector(result_table[,1]))
View(result_table)
result_table$classes
help(create_matrix)
View(mat)
help(svm_classifier)
help(svm)
predictTest <- function(test_user, mat, classifier){
train_mat = mat[1:2,]
train_mat[,1:ncol(train_mat)] = 0
test_matrix = create_matrix(test_user, language="english", removeStopwords=T, removeNumbers=T,stemWords=T, toLower=T, removePunctuation=T)
test_mat <- as.matrix(test_matrix)
for(col in colnames(test_mat)){
if(col %in% colnames(train_mat))
{
train_mat[2,col] = test_mat[1,col];
}
}
#test_mat = as.matrix(t(test_mat))
row.names(train_mat)[1] = ""
row.names(train_mat)[2] = test_user
p <- predict(classifier, train_mat[1:2,])
as.character(p[2])
}
load("classifier.Rdata")
user <- userTimeline('BarackObama',n=100)
user <- twListToDF(user)
user <- user$text
times <- as.data.frame(rep.int(0,9))
percentage <- as.data.frame(rep.int(0,9))
classes <- c("arts","business","food","fashion","music","news","politics","sports","technology")
result_table <- cbind(classes, times,percentage)
num_tweets <- 0
for (i in 1:length(user)){
current <- user[i]
result <- predictTest(current, mat, svm_classifier)
print(result)
for (j in 1:9){
if (result_table[j,1]==result){
result_table[j,2]=result_table[j,2]+1
num_tweets = num_tweets+1
}
}
}
for (j in 1:9){
result_table[j,3] = result_table[j,2]/num_tweets
}
pie(as.vector(result_table[,3]), labels = as.vector(result_table[,1]))
View(result_table)
previous <-rbind(art,bus,politics,food,sport,tech,music,fashion,news)
art <- read.csv("arts.csv",header=T,na.string="")
art <- na.omit(art)
art <- as.character(art$user)
art <- sample(art,1000)
art_cat <- rep("arts",length(art))
art_data <-cbind(art,art_cat)
business <- read.csv("business.csv",header=T)
business <- as.character(business$user)
business <-sample(business,1000)
bus_cat <- rep("business",length(business))
bus_data <-cbind(business,bus_cat)
food <- read.csv("food.csv",header=T,na.string="")
food <- na.omit(food)
food <- as.character(food$user)
food <- sample(food,1000)
food_cat <- rep("food",length(food))
food_data <-cbind(food,edu_cat)
fashion <- read.csv("fashion.csv",header=T)
fashion <- as.character(fashion$user)
fashion <- sample(fashion,1000)
fashion_cat <- rep("fashion",length(fashion))
fashion_data <-cbind(fashion,fashion_cat)
music <- read.csv("music.csv",header=T)
music <- as.character(music$user)
music <- sample(music,1000)
music_cat <- rep("music",length(music))
music_data <-cbind(music,music_cat)
news <- read.csv("news.csv",header=T)
news <- as.character(news$user)
news <- sample(news,1000)
news_cat <- rep("news",length(news))
news_data <-cbind(news,news_cat)
politics <- read.csv("politics.csv",header=T)
politics <- as.character(politics$user)
politics <- sample(politics,1000)
politics_cat <- rep("politics",length(politics))
politics_data <-cbind(politics,politics_cat)
sport <- read.csv("sports.csv",header=T)
sport <- as.character(sport$user)
sport <- sample(sport, 1000)
sport_cat <- rep("sport",length(sport))
sport_data <-cbind(sport,sport_cat)
technology <- read.csv("technology.csv",header=T)
technology <- as.character(technology$user)
technology <- sample(technology,1000)
tech_cat <- rep("technology",length(technology))
tech_data <-cbind(technology,tech_cat)
setwd("~/Dropbox/BT2101 Project/new data")
library("e1071")
library("RTextTools")
predictTest <- function(test_user, mat, classifier){
train_mat = mat[1:2,]
train_mat[,1:ncol(train_mat)] = 0
test_matrix = create_matrix(test_user, language="english", removeStopwords=T, removeNumbers=T,stemWords=T, toLower=T, removePunctuation=T)
test_mat <- as.matrix(test_matrix)
for(col in colnames(test_mat)){
if(col %in% colnames(train_mat))
{
train_mat[2,col] = test_mat[1,col];
}
}
#test_mat = as.matrix(t(test_mat))
row.names(train_mat)[1] = ""
row.names(train_mat)[2] = test_user
p <- predict(classifier, train_mat[1:2,])
as.character(p[2])
}
set.seed(1)
art <- read.csv("arts.csv",header=T,na.string="")
art <- na.omit(art)
art <- as.character(art$user)
art <- sample(art,1000)
art_cat <- rep("arts",length(art))
art_data <-cbind(art,art_cat)
business <- read.csv("business.csv",header=T)
business <- as.character(business$user)
business <-sample(business,1000)
bus_cat <- rep("business",length(business))
bus_data <-cbind(business,bus_cat)
food <- read.csv("food.csv",header=T,na.string="")
food <- na.omit(food)
food <- as.character(food$user)
food <- sample(food,1000)
food_cat <- rep("food",length(food))
food_data <-cbind(food,edu_cat)
fashion <- read.csv("fashion.csv",header=T)
fashion <- as.character(fashion$user)
fashion <- sample(fashion,1000)
fashion_cat <- rep("fashion",length(fashion))
fashion_data <-cbind(fashion,fashion_cat)
music <- read.csv("music.csv",header=T)
music <- as.character(music$user)
music <- sample(music,1000)
music_cat <- rep("music",length(music))
music_data <-cbind(music,music_cat)
news <- read.csv("news.csv",header=T)
news <- as.character(news$user)
news <- sample(news,1000)
news_cat <- rep("news",length(news))
news_data <-cbind(news,news_cat)
politics <- read.csv("politics.csv",header=T)
politics <- as.character(politics$user)
politics <- sample(politics,1000)
politics_cat <- rep("politics",length(politics))
politics_data <-cbind(politics,politics_cat)
sport <- read.csv("sports.csv",header=T)
sport <- as.character(sport$user)
sport <- sample(sport, 1000)
sport_cat <- rep("sport",length(sport))
sport_data <-cbind(sport,sport_cat)
technology <- read.csv("technology.csv",header=T)
technology <- as.character(technology$user)
technology <- sample(technology,1000)
tech_cat <- rep("technology",length(technology))
tech_data <-cbind(technology,tech_cat)
total <- rbind(art_data,bus_data,politics_data,food_data,sport_data,tech_data,music_data,fashion_data,news_data)
food_data <-cbind(food,food_cat)
total <- rbind(art_data,bus_data,politics_data,food_data,sport_data,tech_data,music_data,fashion_data,news_data)
previous <-rbind(art,bus,politics,food,sport,tech,music,fashion,news)
previous <-rbind(art,business,politics,food,sport,tech,music,fashion,news)
previous <-rbind(art,business,politics,food,sport,tech,music,fashion,news)
previous <-rbind(art,business,politics,food,sport,technology,music,fashion,news)
View(previous)
